# .github/workflows/deploy.yml
# üöÄ Pipeline de CI/CD para despliegue local con un Self-Hosted Runner

name: Deploy Locally with Self-Hosted Runner

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Permite ejecutar el pipeline manualmente

# Variables de entorno para que docker-compose las use
env:
  DOCKER_PROJECT_NAME: 'ExamenFinal'
  APP_CONTAINER_NAME: 'ExamenFinal'
  DB_CONTAINER_NAME: 'mysql-ecommerce-prod'
  DB_NAME: 'ExamenFinal'
  DB_USER: 'root'
  DB_PASSWORD: 'admin123'

jobs:
  build-and-deploy:
    name: Build and Deploy Locally
    runs-on: self-hosted

    steps:
      # 1. Descargar el c√≥digo del repositorio en el runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar el entorno de Java y Maven en el runner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Construir el proyecto y crear el .jar
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 4. Desplegar la aplicaci√≥n usando Docker Compose
      - name: Deploy with Docker Compose
        run: |
          echo "‚úÖ Iniciando despliegue en el runner local..."
          
          # Navegamos a la carpeta que contiene el docker-compose.yml
          cd docker
          
          # 1Ô∏è‚É£ Limpiamos cualquier despliegue anterior
          echo "üßπ Limpiando despliegue anterior (si existe)..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "‚ö†Ô∏è No se encontr√≥ un despliegue anterior para limpiar."

          # 2Ô∏è‚É£ Construimos la nueva imagen de la app y levantamos los servicios
          echo "üèóÔ∏è Construyendo y levantando los servicios..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build

          # 3Ô∏è‚É£ Esperamos y ejecutamos el script de la base de datos
          echo "‚è≥ Esperando 30 segundos para que la DB se estabilice..."
          sleep 30
          
          echo "üíæ Inicializando base de datos desde init.sql..."
          cat ../sql/init.sql | docker exec -i ${{ env.DB_CONTAINER_NAME }} mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}

          # 4Ô∏è‚É£ Verificamos el estado final
          echo "üîç Verificando estado de los contenedores..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps
          
          echo "üóíÔ∏è Mostrando los √∫ltimos logs de la aplicaci√≥n:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}
          
          echo "üéâ ‚úì Despliegue local completado exitosamente."
